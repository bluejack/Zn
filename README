
zinc

 - a general purpose language used to experiment with language building
   compiler construction, etc.

 - intended to include an interactive shell with integrated language
   interpretter, a runtime interpretter, and a compiler.

Usage:

$ zinc            <-- Shell Mode
$ zinc file.zn    <-- Interpret and execute file.zn
$ zinc -c file.zn <-- Compile file.zn to application 'file'

Status:

Shell:
 > primitive, but functional; 
   currently using ncurses, but I think I want to use termcap instead.

 > rudimentary handling of command execution

   TODO: 
     ( ) User identification & permissions management
     ( ) Detach from shell command
     ( ) Input to child processes
     ( ) Chaining programs
     ( ) Redirecting stdin/stdout
     ( ) Command history
     ( ) Wildcard expansion
     ( ) Connect to Zinc interpretter
     ( ) Left/Right arrows, ctrl-a, ctrl-e

Runtime:

 > A glimmer in our eye

     ( ) Basic state management
     (.) Symbol table, first draft
         [ ] Hash Table Primitive available!
     ( ) Connect to shell display
     ( ) Establish standalone mode for file interpretation

 > Also a glimmer in our eye

Compiler:

     ( ) Basic parser infrastructure
         [ write ]
     ( ) Test linking a second parser
     ( ) Connect to runtime
     ( ) Hello world -> C

--------------------------------------------------------------------------------
: Plans are only good intentions unless they immediately degenerate into hard  :
: work.                                                      -- Peter Drucker  :
--------------------------------------------------------------------------------

